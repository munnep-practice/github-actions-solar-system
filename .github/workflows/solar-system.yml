name: Solar System Workflow
 
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
env:
  MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD}}
jobs:

    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container: # use this image to execute all the steps 
          image: 'node:20'        # this is a pre-build container image 

        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

       # - name: Setup NodeJS Version                # no longer need as the container already has the nodejs installed
       #   uses: actions/setup-node@v4
       #   with:
       #     node-version: 20

        - name: Cache NPM dependencies              # this will cache the files and check if they are needed
          uses: actions/cache@v4
          with:
            path: ~/.npm
            key: '${{ runner.os }}-node-modules-${{ hashFiles(''package-lock.json'') }}'

        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test

        - name: Archive Test Result
          uses: actions/upload-artifact@v4
          if: always()                     # run this even if the previous step fails
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code-coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v4
        with:
          node-version: 10
  
      - name: Install Dependencies
        run: npm install
  
      - name: Code-coverage
        run: npm run coverage
        continue-on-error: true # can be used but not pretty
      
    docker-build:  
     name: docker build
     permissions: 
       packages: write 
     runs-on: ubuntu-latest
     
     needs: ["code-coverage","unit-testing"]
     
     steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

    dev-deploy:  
      name: dev-deploy
      permissions: #added
        packages: write #added
      runs-on: ubuntu-latest
      needs: ["docker-build"]

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
          
          
        - name: Install kubectl CLI
          uses: azure/setup-kubectl@v3
          with:
            version: 'v1.26.0'
        
        - name: verify kubectl
          run: |
            kubectl version --short -o yaml
            echo ---------------------------------------
            kubectl get nodes    